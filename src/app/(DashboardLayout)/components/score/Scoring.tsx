import React, { useState, useEffect } from 'react';
import { 
  Typography, 
  Box, 
  CircularProgress, 
  Alert, 
  Button,
  Paper
} from '@mui/material';
import DashboardCard from '@/app/(DashboardLayout)/components/shared/DashboardCard';
import axios from 'axios';

// API endpoint - thay ƒë·ªïi URL n√†y theo endpoint th·ª±c t·∫ø c·ªßa b·∫°n
const API_URL = process.env.NEXT_PUBLIC_API_URL + '/api/ai/chat'; 
const sendContent = {
  "messages": [
    {
      "role": "user",
      "content": "<h1><mark class=pen-red>B√∫p b√™ Barbie Cao C·∫•p ‚Äì Bi·ªÉu t∆∞·ª£ng s·∫Øc ƒë·∫πp v√† phong c√°ch</mark></h1><h6><br>B√∫p b√™ Barbie t·ª´ l√¢u ƒë√£ tr·ªü th√†nh m·ªôt bi·ªÉu t∆∞·ª£ng c·ªßa s·ª± s√°ng t·∫°o, phong c√°ch v√† s·ª± ƒëa d·∫°ng. ƒê∆∞·ª£c thi·∫øt k·∫ø v·ªõi ch·∫•t l∆∞·ª£ng cao c·∫•p, Barbie kh√¥ng ch·ªâ l√† m√≥n ƒë·ªì ch∆°i tr·∫ª em, m√† c√≤n l√† m·ªôt ng∆∞·ªùi b·∫°n ƒë·ªìng h√†nh, gi√∫p k√≠ch th√≠ch tr√≠ t∆∞·ªüng t∆∞·ª£ng v√† ni·ªÅm ƒëam m√™ s√°ng t·∫°o.</h6><figure class='image image_resized'style=width:45.85%><img height=2048 src=http://localhost:3000/uploads/0109fb62-a4c5-4c0c-8eae-d65df6714141.jpg style=aspect-ratio:1536/2048 width=1536></figure><h2><br>ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t c·ªßa B√∫p b√™ Barbie Cao C·∫•p</h2><p>V√¨ sao B√∫p b√™ Barbie Cao C·∫•p l√† s·ª± l·ª±a ch·ªçn ho√†n h·∫£o?<br>Kh√¥ng ch·ªâ l√† m·ªôt m√≥n ƒë·ªì ch∆°i th√¥ng th∆∞·ªùng, Barbie gi√∫p tr·∫ª r√®n luy·ªán s·ª± t·ª± tin v√† th·ªÉ hi·ªán b·∫£n th√¢n. V·ªõi h√†ng lo·∫°t ph·ª• ki·ªán v√† m·∫´u m√£ ƒëa d·∫°ng, Barbie m·ªü ra m·ªôt th·∫ø gi·ªõi ƒë·∫ßy m√†u s·∫Øc, n∆°i b√© c√≥ th·ªÉ kh√°m ph√° phong c√°ch ri√™ng c·ªßa m√¨nh.<br>H√£y ƒë·ªÉ Barbie tr·ªü th√†nh ng∆∞·ªùi b·∫°n ƒë·ªìng h√†nh ƒë√°ng y√™u c·ªßa b√©! üíñ"
    }
  ],
  "systemPrompt": "B·∫°n l√† tr·ª£ l√Ω ·∫£o c·ªßa GiftWeb, H√£y ƒë√°nh gi√° SEO trang n√†y theo ti√™u chu·∫©n Google (thang ƒëi·ªÉm 100), g·ª≠i l·∫°i cho t√¥i b·∫£n ch·ªânh s·ª≠a ƒë·ªÉ tƒÉng ƒëi·ªÉm SEO. Tr·∫£ l·ªùi b·∫±ng ti·∫øng Vi·ªát."
};

// C·∫≠p nh·∫≠t h√†m stripHtml ƒë·ªÉ b·∫£o to√†n xu·ªëng d√≤ng
const stripHtml = (html: string) => {
  // S·ª≠ d·ª•ng textContent thay v√¨ innerText
  const temp = document.createElement('div');
  temp.innerHTML = html;
  return temp.textContent || '';
};

const Scoring = () => {
  // States ƒë·ªÉ qu·∫£n l√Ω d·ªØ li·ªáu v√† tr·∫°ng th√°i
  const [content, setContent] = useState('');
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  // H√†m g·ªçi API
  const fetchData = async () => {
    setLoading(true);
    setError(null);
    
    try {
      const response = await axios.post(API_URL, sendContent);
      console.log('Response:', response.data.data.response.content);
      
      // Ki·ªÉm tra v√† l·∫•y n·ªôi dung t·ª´ response
      if (response.data.data && response.data.data.response && response.data.data.response.content) {
        setContent(response.data.data.response.content);
      } else {
        setError('D·ªØ li·ªáu kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng');
      }
    } catch (err) {
      setError('Kh√¥ng th·ªÉ k·∫øt n·ªëi v·ªõi server. Vui l√≤ng th·ª≠ l·∫°i sau.');
      console.error('Error fetching data:', err);
    } finally {
      setLoading(false);
    }
  };

  // G·ªçi API khi component mount
  useEffect(() => {
    fetchData();
  }, []);

  return (
    <DashboardCard title="Scoring Report">
      {loading ? (
        <Box display="flex" justifyContent="center" p={3}>
          <CircularProgress />
        </Box>
      ) : error ? (
        <Alert severity="error" sx={{ mb: 2 }}>
          {error}
          <Button 
            size="small" 
            variant="outlined" 
            sx={{ ml: 2 }} 
            onClick={fetchData}
          >
            Th·ª≠ l·∫°i
          </Button>
        </Alert>
      ) : (
        <Paper 
          elevation={0} 
          sx={{ 
            p: 3, 
            backgroundColor: '#fafafa',
            borderRadius: 2,
            minHeight: '200px'
          }}
        >
          <Typography 
            sx={{ 
              lineHeight: 1.7,
              whiteSpace: 'pre-wrap' // Quan tr·ªçng: gi·ªØ nguy√™n k√Ω t·ª± xu·ªëng d√≤ng khi hi·ªÉn th·ªã
            }}
          >
            {stripHtml(content)}
          </Typography>
        </Paper>
      )}
    </DashboardCard>
  );
};

export default Scoring;
